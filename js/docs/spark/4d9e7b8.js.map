{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/pages/md/bigData_spark_高阶_3-4_coalesce和repartition.md?0ba9","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./src/pages/md/bigData_spark_高阶_3-4_coalesce和repartition.md","webpack:///./src/pages/md/bigData_spark_高阶_3-4_coalesce和repartition.md?a307"],"names":[],"mappings":";;;;;;;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yBAAyB;AAC/C,gBAAgB,SAAS,gCAAgC,EAAE;AAC3D;AACA;AACA;AACA;AACA,oBAAoB;AACpB,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA,sBAAsB,8BAA8B;AACpD;AACA;AACA;AACA;AACA;AACA,sBAAsB,+BAA+B;AACrD;AACA,wBAAwB,4BAA4B;AACpD,wBAAwB,6BAA6B;AACrD;AACA,0BAA0B,8BAA8B;AACxD;AACA;AACA;AACA;AACA;AACA,wBAAwB,6BAA6B;AACrD;AACA,0BAA0B,8BAA8B;AACxD;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,sBAAsB,6BAA6B;AACnD;AACA,sBAAsB,6BAA6B;AACnD;AACA;AACA;AACA,sBAAsB,8BAA8B;AACpD,8BAA8B;AAC9B,sBAAsB,8BAA8B;AACpD;AACA;AACA;AACA;AACA;AACA,oFAAoF;AACpF;AACA,sBAAsB,8BAA8B;AACpD;AACA,sBAAsB,8BAA8B;AACpD;AACA,wEAAwE;AACxE;AACA,sBAAsB,8BAA8B;AACpD;AACA;AACA;AACA;AACA;AACA,sBAAsB,8BAA8B;AACpD;AACA;AACA;AACA,sBAAsB,6BAA6B;AACnD;AACA,iDAAiD,SAAS;AAC1D;AACA,sBAAsB,8BAA8B;AACpD;AACA;AACA;AACA;AACA;AACA,sBAAsB,8BAA8B;AACpD;AACA,sBAAsB,8BAA8B;AACpD;AACA;AACA;AACA,sBAAsB,8BAA8B;AACpD;AACA,iHAAiH;AACjH;AACA,sBAAsB,8BAA8B;AACpD,oBAAoB;AACpB,sBAAsB,8BAA8B;AACpD;AACA,sBAAsB,8BAA8B;AACpD,6DAA6D,KAAK;AAClE;AACA;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA,sBAAsB,8BAA8B;AACpD;AACA;AACA;AACA;AACA;AACA,sBAAsB,+BAA+B;AACrD;AACA,wBAAwB,4BAA4B;AACpD,wBAAwB,6BAA6B;AACrD;AACA;AACA,wBAAwB,6BAA6B;AACrD;AACA,0BAA0B,8BAA8B;AACxD;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,sBAAsB,8BAA8B;AACpD,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,sCAAsC;AACvD,iBAAiB,oCAAoC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACvKA;AAAA;AAAA;;AAEA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5FA;AAAA;AAAA;AAAuH;AACvH;;;AAGA;AAC6F;AAC7F,gBAAgB,2GAAU;AAC1B;AACA,EAAE,gHAAM;AACR,EAAE,yHAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,KAAU,EAAE,YAiBf;AACD;AACe,gF;;;;;;;;;;;;ACrCf;AAAA;AAAA;AAAA;AAAA;AAAA","file":"/docs/spark/4d9e7b8.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/pages/md/bigData_spark_高阶_3-4_coalesce和repartition.md\");\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"h2\", { attrs: { id: \"coalecse-vs-repartition\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#coalecse-vs-repartition\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" coalecse vs repartition\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"有时需要对RDD的数据进行重新分区，重新分区。\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"coalecse\")]),\n      _vm._v(\" \"),\n      _c(\"pre\", { staticClass: \"hljs\" }, [\n        _c(\"code\", [\n          _vm._v(\"   \\n   \"),\n          _c(\"span\", { staticClass: \"hljs-comment\" }, [\n            _vm._v(\n              \"/**\\n   * Return a new RDD that is reduced into `numPartitions` partitions.\\n   *\\n   * This results in a narrow dependency, e.g. if you go from 1000 partitions\\n   * to 100 partitions, there will not be a shuffle, instead each of the 100\\n   * new partitions will claim 10 of the current partitions.\\n   *\\n   * However, if you're doing a drastic coalesce, e.g. to numPartitions = 1,\\n   * this may result in your computation taking place on fewer nodes than\\n   * you like (e.g. one node in the case of numPartitions = 1). To avoid this,\\n   * you can pass shuffle = true. This will add a shuffle step, but means the\\n   * current upstream partitions will be executed in parallel (per whatever\\n   * the current partitioning is).\\n   *\\n   * Note: With shuffle = true, you can actually coalesce to a larger number\\n   * of partitions. This is useful if you have a small number of partitions,\\n   * say 100, potentially with a few partitions being abnormally large. Calling\\n   * coalesce(1000, shuffle = true) will result in 1000 partitions with the\\n   * data distributed using a hash partitioner.\\n   */\"\n            )\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { staticClass: \"hljs-function\" }, [\n            _vm._v(\"def \"),\n            _c(\"span\", { staticClass: \"hljs-title\" }, [_vm._v(\"coalesce\")]),\n            _c(\"span\", { staticClass: \"hljs-params\" }, [\n              _vm._v(\"(numPartitions: Int, shuffle: Boolean = \"),\n              _c(\"span\", { staticClass: \"hljs-keyword\" }, [_vm._v(\"false\")]),\n              _vm._v(\n                \",\\n               partitionCoalescer: Option[PartitionCoalescer] = Option.empty)\"\n              )\n            ]),\n            _vm._v(\"\\n              \"),\n            _c(\"span\", { staticClass: \"hljs-params\" }, [\n              _vm._v(\"(implicit ord: Ordering[T] = \"),\n              _c(\"span\", { staticClass: \"hljs-keyword\" }, [_vm._v(\"null\")]),\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"\\n      : RDD[T] \")\n          ]),\n          _vm._v(\"= withScope {\\n    require(numPartitions > \"),\n          _c(\"span\", { staticClass: \"hljs-number\" }, [_vm._v(\"0\")]),\n          _vm._v(\", s\"),\n          _c(\"span\", { staticClass: \"hljs-string\" }, [\n            _vm._v('\"Number of partitions ($numPartitions) must be positive.\"')\n          ]),\n          _vm._v(\")\\n    \"),\n          _c(\"span\", { staticClass: \"hljs-keyword\" }, [_vm._v(\"if\")]),\n          _vm._v(\" (shuffle) {\\n      \"),\n          _c(\"span\", { staticClass: \"hljs-comment\" }, [\n            _vm._v(\n              \"/** Distributes elements evenly across output partitions, starting from a random partition. */\"\n            )\n          ]),\n          _vm._v(\n            \"\\n      val distributePartition = (index: Int, items: Iterator[T]) => {\\n        \"\n          ),\n          _c(\"span\", { staticClass: \"hljs-keyword\" }, [_vm._v(\"var\")]),\n          _vm._v(\" position = (\"),\n          _c(\"span\", { staticClass: \"hljs-keyword\" }, [_vm._v(\"new\")]),\n          _vm._v(\n            \" Random(index)).nextInt(numPartitions)\\n        items.map { t =>\\n          \"\n          ),\n          _c(\"span\", { staticClass: \"hljs-comment\" }, [\n            _vm._v(\n              \"// Note that the hash code of the key will just be the key itself. The HashPartitioner\"\n            )\n          ]),\n          _vm._v(\"\\n          \"),\n          _c(\"span\", { staticClass: \"hljs-comment\" }, [\n            _vm._v(\"// will mod it with the number of total partitions.\")\n          ]),\n          _vm._v(\"\\n          position = position + \"),\n          _c(\"span\", { staticClass: \"hljs-number\" }, [_vm._v(\"1\")]),\n          _vm._v(\n            \"\\n          (position, t)\\n        }\\n      } : Iterator[(Int, T)]\\n\\n      \"\n          ),\n          _c(\"span\", { staticClass: \"hljs-comment\" }, [\n            _vm._v(\n              \"// include a shuffle step so that our upstream tasks are still distributed\"\n            )\n          ]),\n          _vm._v(\"\\n      \"),\n          _c(\"span\", { staticClass: \"hljs-keyword\" }, [_vm._v(\"new\")]),\n          _vm._v(\" CoalescedRDD(\\n        \"),\n          _c(\"span\", { staticClass: \"hljs-keyword\" }, [_vm._v(\"new\")]),\n          _vm._v(\n            \" ShuffledRDD[Int, T, T](mapPartitionsWithIndex(distributePartition),\\n        \"\n          ),\n          _c(\"span\", { staticClass: \"hljs-keyword\" }, [_vm._v(\"new\")]),\n          _vm._v(\n            \" HashPartitioner(numPartitions)),\\n        numPartitions,\\n        partitionCoalescer).values\\n    } \"\n          ),\n          _c(\"span\", { staticClass: \"hljs-keyword\" }, [_vm._v(\"else\")]),\n          _vm._v(\" {\\n      \"),\n          _c(\"span\", { staticClass: \"hljs-keyword\" }, [_vm._v(\"new\")]),\n          _vm._v(\" CoalescedRDD(\"),\n          _c(\"span\", { staticClass: \"hljs-keyword\" }, [_vm._v(\"this\")]),\n          _vm._v(\", numPartitions, partitionCoalescer)\\n    }\\n  }\\n\\n\\n\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"repartition\")]),\n      _vm._v(\" \"),\n      _c(\"pre\", { staticClass: \"hljs\" }, [\n        _c(\"code\", [\n          _vm._v(\"   \\n   \"),\n          _c(\"span\", { staticClass: \"hljs-comment\" }, [\n            _vm._v(\n              \"/**\\n   * Return a new RDD that has exactly numPartitions partitions.\\n   *\\n   * Can increase or decrease the level of parallelism in this RDD. Internally, this uses\\n   * a shuffle to redistribute data.\\n   *\\n   * If you are decreasing the number of partitions in this RDD, consider using `coalesce`,\\n   * which can avoid performing a shuffle.\\n   */\"\n            )\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { staticClass: \"hljs-function\" }, [\n            _vm._v(\"def \"),\n            _c(\"span\", { staticClass: \"hljs-title\" }, [_vm._v(\"repartition\")]),\n            _c(\"span\", { staticClass: \"hljs-params\" }, [\n              _vm._v(\"(numPartitions: Int)\")\n            ]),\n            _c(\"span\", { staticClass: \"hljs-params\" }, [\n              _vm._v(\"(implicit ord: Ordering[T] = \"),\n              _c(\"span\", { staticClass: \"hljs-keyword\" }, [_vm._v(\"null\")]),\n              _vm._v(\")\")\n            ]),\n            _vm._v(\": RDD[T] \")\n          ]),\n          _vm._v(\"= withScope {\\n    coalesce(numPartitions, shuffle = \"),\n          _c(\"span\", { staticClass: \"hljs-keyword\" }, [_vm._v(\"true\")]),\n          _vm._v(\")\\n  }\\n\\n\\n\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"源码可以看出 repartition 是 coalecse 的 shuffle = true 的操作， 如果只是为了重新合并分区或拆分，可以使用 coalecse 。\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"success custom-block\" }, [\n        _c(\"p\", { staticClass: \"custom-block-title\" }),\n        _vm._v(\" \"),\n        _c(\"pre\", [\n          _c(\"code\", [\n            _vm._v(\n              \"分区重分配可用于 filter 过滤，数据过滤后，各个分区的数量减少。在开启相同的task，会对资源造成浪费，速度反而越慢了。\\n\"\n            )\n          ])\n        ])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","import { render, staticRenderFns } from \"./bigData_spark_高阶_3-4_coalesce和repartition.md?vue&type=template&id=8ef34160&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/fandong/Desktop/gitblogNew/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('8ef34160')) {\n      api.createRecord('8ef34160', component.options)\n    } else {\n      api.reload('8ef34160', component.options)\n    }\n    module.hot.accept(\"./bigData_spark_高阶_3-4_coalesce和repartition.md?vue&type=template&id=8ef34160&\", function () {\n      api.rerender('8ef34160', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/pages/md/bigData_spark_高阶_3-4_coalesce和repartition.md\"\nexport default component.exports","export * from \"-!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??ref--5-0!../../../build/md-loader/index.js!./bigData_spark_高阶_3-4_coalesce和repartition.md?vue&type=template&id=8ef34160&\""],"sourceRoot":""}